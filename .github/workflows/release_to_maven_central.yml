name: Release to Sonatype

on:
  workflow_dispatch:

env:
  RELEASE_KEY_PASSWORD:  ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
  RELEASE_KEY_ALIAS:  ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
  RELEASE_STORE_PASSWORD:  ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
  DEVELOPMENT_MODE: ${{ secrets.DEVELOPMENT_MODE }}
  GOOGLE_SERVICES_API_KEY: ${{ secrets.GOOGLE_SERVICES_API_KEY }}
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  SLACK_ICON: https://icons.iconarchive.com/icons/martz90/circle/256/android-icon.png
  SLACK_TITLE: New SDK Release
  SLACK_USERNAME: Emarsys SDK - Android
  BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
  BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
  EXCLUDE_GOOGLE_SERVICES_API_KEY: true
  SIGNING_SECRET_KEY_RING_FILE: /home/runner/work/android-emarsys-sdk/android-emarsys-sdk/secring.asc.gpg

jobs:
  Release:
    runs-on: ubuntu-latest
    name: Release the SDK
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          submodules: true
          fetch-depth: 0 # 0 indicates all history
      - run: git fetch --all || echo "==> Accept any result"
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: create-google services json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: google-services.json
          json: ${{ secrets.GOOGLE_SERVICES_JSON }}
          dir: sample
      - name: setup RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create mavenCentral keystore file
        shell: bash
        run: |
          echo "${{ secrets.SIGNING_KEY_FILE_ASC }}" > secring.asc
          gpg --dearmor secring.asc > secring.gpg

      - name: Gradle assemble release
        run: ./gradlew clean assembleRelease

      - name: Create file 'FAILURE.TXT' and write 'false' into it
        run: echo 'false' > FAILURE.TXT

      - name: Upload file 'FAILURE.TXT' as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: failure_file
          path: FAILURE.TXT

      - name: Release with Gradle
        run: ./gradlew publishToSonatype closeSonatypeStagingRepository

      - name: Create file 'FAILURE.TXT' and write 'true' into it
        if: ${{ failure() }}
        run: echo 'true' > FAILURE.TXT

      - name: Upload file 'FAILURE.TXT' as an artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v1
        with:
          name: failure_file
          path: FAILURE.TXT


  OnError:
    name: Handle on Error
    runs-on: ubuntu-latest
    needs: [ReleaseSample]
    if: always()
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          submodules: true
          fetch-depth: 0 # 0 indicates all history
      - run: git fetch --all || echo "==> Accept any result"

      - name: Download file 'FAILURE.TXT' from artifact
        uses: actions/download-artifact@v1
        with:
          name: failure_file

      - name: Read file 'FAILURE.TXT' and set output parameter
        id: set_output
        run: echo "::set-output name=FAILURE::$(<failure_file/FAILURE.TXT)"

      - name: setup RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Slack Notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_MOBILE_TEAM_CI_CHANNEL_WEBHOOK }}
        if: steps.set_output.outputs.FAILURE == 'true'
        uses: megamegax/slack_action@0.2.3
        with:
          channel: '${{env.SLACK_CHANNEL}}'
          message: 'Sonatype release failed! :man-gesturing-no: :blobcatfearful:'
          user_name: '${{env.SLACK_USERNAME}}'
          job_status: 'failure'
          user_icon: '${{env.SLACK_ICON}}'
          actions: '[{ "type": "button", "text": "View actions", "url": "https://github.com/emartech/android-emarsys-sdk/actions" },{ "type": "button", "text": "View Firebase", "url": "https://console.firebase.google.com/project/ems-mobile-sdk/testlab/histories/" }]'
