apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'androidx.navigation.safeargs'

group= 'com.emarsys.sample'

android {
    buildToolsVersion Config.buildToolsVersion
    compileSdkVersion Config.targetApiLevel
    defaultConfig {
        applicationId "com.emarsys.sample"
        minSdkVersion Config.minApiLevel
        targetSdkVersion Config.targetApiLevel
        versionCode gitVersionCode
        versionName gitVersionName
        testInstrumentationRunner "com.emarsys.sample.testutils.SampleAppTestRunner"
        resValue "string", "sdk_version", "${gitVersionName}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    if (project.devConfig.releaseSampleApp || System.env.DEVELOPMENT_MODE) {
        signingConfigs {
            release {
                storeFile file(System.env.RELEASE_STORE_FILE ?: releaseStoreFile)
                storePassword System.env.RELEASE_STORE_PASSWORD ?: releaseStorePassword
                keyAlias System.env.RELEASE_KEY_ALIAS ?: releaseKeyAlias
                keyPassword System.env.RELEASE_KEY_PASSWORD ?: releaseKeyPassword
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    buildTypes {
        debug {
            multiDexKeepProguard file("proguard-multidex-rules.pro")
            multiDexEnabled true
        }

    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.2'
    }
}

dependencies {
    if (project.devConfig.useLocalDependency || System.env.DEVELOPMENT_MODE) {
        implementation project(':emarsys-sdk')
    } else {
        implementation 'com.emarsys:emarsys-sdk:+'
    }
    // Getting a "Could not find firebase-core" error? Make sure you have
    // the latest Google Repository in the Android SDK manager

    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

apply plugin: 'com.google.gms.google-services'